// This is your Prisma schema file, // learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentStatus {
  PROCESSING
  ANALYSED
  FAILED
}

enum DocumentAnalysisStatus {
  PENDING
  COMPLETED
}

model User {
  id             String  @id @default(uuid())
  email          String  @unique
  password_hash  String?
  name           String
  picture        String?
  oauth_provider String?
  oauth_id       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Document Document[]

  @@map("users")
}

model Document {
  id                 String         @id @default(uuid())
  filename           String
  storage_path       String
  file_size_in_bytes Int
  status             DocumentStatus @default(PROCESSING)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  DocumentAnalysis DocumentAnalysis[]

  @@map("documents")
}

model DocumentAnalysis {
  id      String                 @id @default(uuid())
  status  DocumentAnalysisStatus @default(PENDING)
  report  Json?
  summary String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  document_id String
  document    Document @relation(fields: [document_id], references: [id], onDelete: Cascade)

  @@map("document_analyses")
}
